// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using examen.Data;

#nullable disable

namespace examen.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("examen.Models.DemandeOffreEntreprise", b =>
                {
                    b.Property<int>("IdDemande")
                        .HasColumnType("int");

                    b.Property<int>("IdOffre")
                        .HasColumnType("int");

                    b.Property<string>("NomCandidat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrenomCandidat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TelephoneCandidat")
                        .HasColumnType("int");

                    b.HasKey("IdDemande", "IdOffre");

                    b.HasIndex("IdOffre");

                    b.ToTable("Demandes");
                });

            modelBuilder.Entity("examen.Models.Entreprise", b =>
                {
                    b.Property<int>("IdEntreprise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEntreprise"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localisation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomEntreprise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telephone")
                        .HasColumnType("int");

                    b.HasKey("IdEntreprise");

                    b.ToTable("Entreprises");
                });

            modelBuilder.Entity("examen.Models.OffreEmplois", b =>
                {
                    b.Property<int>("IdOffre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOffre"));

                    b.Property<int>("DomaineTravail")
                        .HasColumnType("int");

                    b.Property<int>("IdEntreprise")
                        .HasColumnType("int");

                    b.Property<string>("OffreDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salaire")
                        .HasColumnType("int");

                    b.HasKey("IdOffre");

                    b.HasIndex("IdEntreprise");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("examen.Models.DemandeOffreEntreprise", b =>
                {
                    b.HasOne("examen.Models.OffreEmplois", "OffreEmplois")
                        .WithMany("DemandesOffres")
                        .HasForeignKey("IdOffre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OffreEmplois");
                });

            modelBuilder.Entity("examen.Models.OffreEmplois", b =>
                {
                    b.HasOne("examen.Models.Entreprise", "Entreprises")
                        .WithMany("Offres")
                        .HasForeignKey("IdEntreprise")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entreprises");
                });

            modelBuilder.Entity("examen.Models.Entreprise", b =>
                {
                    b.Navigation("Offres");
                });

            modelBuilder.Entity("examen.Models.OffreEmplois", b =>
                {
                    b.Navigation("DemandesOffres");
                });
#pragma warning restore 612, 618
        }
    }
}
